#! /bin/sh

# autostart
sxhkd &
#$HOME/.config/polybar/launch.sh

# bspc monitor eDP-1 -d 1 2 3 4 5 6 7 8 9 10
# bspc monitor DP-3 -d 1 2 3 4 5 6 7 8 9 10
# bspc monitor DP-1 -d 1 2 3 4 5 6 7 8 9 10

if [ "$(xrandr -q | awk '/ connected / {print $1}' | wc -l)" -eq 1 ];
then
    bspc monitor eDP-1 -d 1 2 3 4 5 6 7 8 9 10
else
    bspc monitor DP-3 -d 1 2 3 4 5 6 7 8 9 10
    bspc monitor DP-1 -d 1 2 3 4 5 6 7 8 9 10
fi

# Define some functions

#multimonitors()
#{
#  start_from=1
#  monitors_connected=$(bspc query -M | wc -l)
#  per_monitor=$(( 10 * monitors_connected ))
#  for monitor in $(bspc query -M); do
#    bspc monitor $monitor -d $(seq $start_from $(( start_from + per_monitor - 1)))
#    start_from=$(( start_from + per_monitor ))
# done
#}

# multibar() {
#   # check how many monitors are connected and start polybar on all of them.
#   pkill polybar
#   while pgrep -x polybar >/dev/null; do sleep 1; done
#   xrandr -q | awk '/ connected / {print $1}' | while read -r monitor _; do
#   polybar -r "$monitor" &
# done
# }
# Try using arcolinux polybar launch script
$HOME/.config/polybar/launch.sh --forest &

# Divide workspaces/desktops to all connected monitors
#multimonitors

# for monitor in unplugged disabled ; do
#   bspc config \
#     remove_${monitor}_monitors      true
# done

# bspc config \
#   merge_overlapping_monitors        true

# Rules for windows

bspc config external_rules_command "$HOME"/.config/bspwm/external_rules

# Start polybar on all connected monitors

# multibar &

xsetroot -cursor_name arrow &

bspc config border_width         2
bspc config window_gap           10
bspc config bottom_padding       0
bspc config split_ratio          0.50
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config focus_by_distance             true
bspc config focus_follows_pointer         true
bspc config history_aware_focus           true
bspc config remove_disabled_monitors      true
bspc config merge_overlapping_monitors    true
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner
bspc config single_monocle true

#BSPWM coloring
bspc config normal_border_color		"#4c566a"
bspc config active_border_color		"#cc0000"
bspc config focused_border_color	"#5e81ac"
bspc config presel_feedback_color	"#5e81ac"
#bspc config urgent_border_color        "#dd2727"

#bspc rule -a Gimp desktop='^8' state=floating follow=on
#bspc rule -a Chromium desktop='^2'
#bspc rule -a mplayer2 state=floating
#bspc rule -a Kupfer.py focus=on
#bspc rule -a Screenkey manage=off
#Floating applications
bspc rule -a Arandr state=floating
bspc rule -a Arcolinux-tweak-tool.py state=floating
bspc rule -a Arcolinux-welcome-app.py state=floating
bspc rule -a Arcolinux-calamares-tool.py state=floating
bspc rule -a feh state=floating
bspc rule -a Galculator state=floating
bspc rule -a 'Toggl Desktop' state=floating desktop='^5'
bspc rule -a pcloud state=floating desktop='^5'
#Fullscreen apps
bspc rule -a 'Microsoft Teams - Preview' desktop='^4'
bspc rule -a Emacs state=tiled
bspc rule -a Zathura state=tiled
bspc rule -a Gnome-disks state=tiled
bspc rule -a Xfce4-settings-manager state=tiled

teams &
./Appimages/pcloud &
slack &
# variety &
nm-applet &
run pamac-tray &
run xfce4-power-manager &
blueberry-tray &
mpd &
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
## notifications
/usr/bin/dunst &
#/usr/lib/xfce4/notifyd/xfce4-notifyd &
# volumeicon &
flatpak run com.toggl.TogglDesktop &

# disable wacom pen pen input to fix cursor jump issue
xinput disable `xinput | grep "Pen Pen" | awk '{print $9}' | sed 's/id=//'`
